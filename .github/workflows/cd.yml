# inspired by https://github.com/extrawurst/gitui/blob/main/.github/workflows/cd.yml
name: CD

on: push
#    tags:
#      - '*'

jobs:
  release:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Prepare Tag as Version
        id: get_version
        run: echo ::set-output name=version::${GITHUB_REF##*/}
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Set TARGET
        if: matrix.os == 'ubuntu-latest'
        run: echo ::set-env name=TARGET::x86_64-unknown-linux-musl
      - name: Set TARGET
        if: matrix.os == 'windows-latest'
        run: echo ::set-env name=TARGET::x86_64-pc-windows-gnu
      - name: Set TARGET
        if: matrix.os == 'macos-latest'
        run: echo ::set-env name=TARGET::x86_64-apple-darwin

      - name: Prepare Cargo Target
        if: matrix.os != 'windows-latest'
        run: rustup target add $TARGET
      - name: Prepare MUSL tooling
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get -qq install musl-tools
      - name: Cargo Build
        if: matrix.os != 'windows-latest'
        run: cargo build --release --target $TARGET --locked
      - name: Cargo Build
        if: matrix.os == 'windows-latest'
        run: cargo build --release --locked
      - name: Set Artifact Name
        run: echo ::set-env name=NAME::stegano-${{ steps.get_version.outputs.version }}-$TARGET
      - name: Build Package
        if: matrix.os != 'windows-latest'
        run: |
          strip target/$TARGET/release/stegano
          mkdir $NAME
          cp target/$TARGET/release/stegano README.md LICENSE $NAME/
          tar czvf $NAME.tar.gz $NAME
          mkdir releases
          cp $NAME.tar.gz releases/